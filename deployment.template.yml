parameters:
  azure_resource_group_name: 
  subscription_id: 
  application_id: 
  tenant_id: 
  variableGroup: 
  dependOn: 
  environment:

stages:
  - stage: Deploy
    dependsOn: ${{ parameters.dependOn }}
    variables:
      - group: ${{ parameters.variableGroup }}
    pool:
      vmImage: "ubuntu-latest"
    jobs:
    - deployment: "Deploy"
      displayName: 'Deploy Resource Group'
      environment:
        name: ${{ parameters.environment }}
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self
                displayName: "Download Repo"
              - task: PowerShell@2
                displayName: "Connect to Azure"
                inputs:
                  filePath: "connect-azure.ps1"
                  arguments: '-ServicePrincipalPassword (ConvertTo-SecureString -AsPlainText -Force  "$(ServerAutomationDemo-AppPw)") -Subscription "${{ parameters.subscription_id }}" -ApplicationId ${{ parameters.application_id }} -Tenant ${{ parameters.tenant_id }} '
              - task: Pester@0
                displayName: "Test Template validity against Azure"
                inputs:
                  scriptFolder: "@{Path='$(System.DefaultWorkingDirectory)/server.template.tests.ps1'; Parameters=@{ResourceGroupName='$(azure_resource_group_name)'}}"
                  resultsFile: "$(System.DefaultWorkingDirectory)/server.template.tests.XML"
                  usePSCore: true
                  run32Bit: False
              - task: PublishTestResults@2
                displayName: "Publish result of validity check"
                inputs:
                  testResultsFormat: "NUnit"
                  testResultsFiles: "$(System.DefaultWorkingDirectory)/server.template.tests.XML"
                  failTaskOnFailedTests: true
              - task: PowerShell@2
                displayName: "Create Resource Group"
                inputs:
                  targetType: "inline"
                  script: 'New-AzResourceGroup -Name "${{ parameters.azure_resource_group_name }}" -Location uksouth -Force'
              - task: AzureResourceManagerTemplateDeployment@3
                inputs:
                  deploymentScope: "Resource Group"
                  azureResourceManagerConnection: "ARM"
                  subscriptionId: ${{ parameters.subscription_id }}
                  action: "Create Or Update Resource Group"
                  resourceGroupName: ${{ parameters.azure_resource_group_name }}
                  location: "UK South"
                  templateLocation: "Linked artifact"
                  csmFile: "server.json"
                  csmParametersFile: "server.parameters.json"
                  deploymentMode: "Incremental"
                  deploymentOutputs: "arm_output"
              - task: Pester@0
                displayName: "Test Deployment results"
                inputs:
                  scriptFolder: "@{Path='$(System.DefaultWorkingDirectory)/server.infrastructure.tests.ps1'; Parameters=@{ArmDeploymentJsonOutput='$(arm_output)'}}"
                  resultsFile: "$(System.DefaultWorkingDirectory)/server.infrastructure.tests.XML"
                  usePSCore: true
                  run32Bit: False
              - task: PublishTestResults@2
                displayName: "Publish deployment results"
                inputs:
                  testResultsFormat: "NUnit"
                  testResultsFiles: "$(System.DefaultWorkingDirectory)/server.infrastructure.tests.XML"
                  failTaskOnFailedTests: true
              - task: PowerShell@2
                displayName: "Post Installation steps"
                inputs:
                  targetType: filePath
                  filePath: "config-vm.ps1"
                  arguments: '-rgname "${{ parameters.azure_resource_group_name }}"'
              - task: PublishPipelineArtifact@1
                inputs:
                  targetPath: '$(Build.ArtifactStagingDirectory)/results'
                  artifact: '${{ parameters.environment }} Results'
              - task: Pester@0
                displayName: "Final Deployment results"
                inputs:
                  scriptFolder: "@{Path='$(System.DefaultWorkingDirectory)/2server.infrastructure.tests.ps1'; Parameters=@{RGName='${{ parameters.azure_resource_group_name }}'; Subscription='${{ parameters.subscription_id }}'}}"
                  resultsFile: "$(System.DefaultWorkingDirectory)/2server.infrastructure.tests.XML"
                  usePSCore: true
                  run32Bit: False
              - task: PublishTestResults@2
                displayName: "Publish final deployment results"
                inputs:
                  testResultsFormat: "NUnit"
                  testResultsFiles: "$(System.DefaultWorkingDirectory)/2server.infrastructure.tests.XML"
                  failTaskOnFailedTests: true
             
